==============================================================
Level2: ステートフルコンテナの実現
==============================================================

ここではデータの永続化について確認します。
コンテナのホストが変わったり、そもそも永続化をしていないため再起動でデータが消えるを体験しどのように解決するかを見ます。

Dynamic storage provisioningの機構や、PV/PVCについての理解を深めるレベルです。

コンテナで永続化が必要なものをリストアップする
=============================================================

本ラボでは以下のイメージを準備しています。
考えられるものとしては以下のようなものがあります。

* データベースのデータファイル、ログファイル
* 各サーバのログファイル
* 設定ファイル
* 共有ファイル

StorageClassの定義
=============================================================

StorageClass を定義して、ストレージのサービスカタログを作りましょう。

* DB 用の高速領域: SSD を使ったストレージサービス
* Web コンテンツ用のリポジトリ: HDDを使ったストレージサービス

StorageClassFastest::

    ..todo::


StorageClassCapacity::

    ..todo::


Persistent Volume Claimの作成
=============================================================



デプロイに使用したyamlファイルに PVC を追加
=============================================================

Level1 のときに作成した yaml に PVC の項目を追加し、永続化出来るアプリケーションを定義する。

デプロイメント実施
=============================================================

アプリケーションから何かしらのデータを保存するようにする。

アプリケーションの停止
=============================================================

永続化されていることを確認するため、一度アプリケーションを停止する。
可能であればアプリケーションのバージョンアップを行う。

再起動でも可能

ここでは通常運用のリリースに想定するオペレーションをして、しっかりデータが残っていることを確認する。

再デプロイメント
=============================================================

永続化したデータが参照できることを確認する。


ここまでで Level2 は終了です。
